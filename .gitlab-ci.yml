stages:
  - build
  - test
  - integration
  - deploy
  - release

.global_variables: &global_variables
  # Runner instance name, passed to Terraform
  TF_VAR_instance_name: "cbdb-pipeline-${CI_PIPELINE_ID}-job-${CI_JOB_ID}"
  TF_VAR_qingcloud_access_key: "key"
  TF_VAR_qingcloud_secret_key: "secret"
  TF_VAR_huawei_access_key: "key"
  TF_VAR_huawei_secret_key: "secret"
  # Custom clone path on runner instance
  GIT_CLONE_PATH: "/code/gpdb_src"
  GIT_SUBMODULE_STRATEGY: "normal"
  GIT_DEPTH: 0
  CI_USER: root
  # For internal deploy
  ARTIFACTORY_USERNAME: "admin"
  ARTIFACTORY_PASSWORD: "token"
  # For artifacts
  BUCKET_INTERMEDIATE: "http://artifactory.hashdata.xyz/artifactory/hashdata-repository/intermediate-artifacts"
  BUCKET_PRODUCT:      "http://artifactory.hashdata.xyz/artifactory/hashdata-repository/product-artifacts"
  DOCKER_REPO: "docker.artifactory.hashdata.xyz"
  BUILD_TYPE: "debug"
  FTS_MODE: "internal_fts"

# x86_64 on qingcloud is the default platform
.default_kylin10_x86_64_config: &default_kylin10_x86_64_config
  CI_TF_LOCATION: ".ci/tf-huawei-arm"
  TF_VAR_instance_image: 7d3020dd-f105-4e1b-a762-7c51eb8e849d
  TF_VAR_flavor_id: "s6.2xlarge.2"

.default_kylin10_aarch64_config: &default_kylin10_aarch64_config
  CI_TF_LOCATION: ".ci/tf-huawei-arm"
  TF_VAR_instance_image: 6ce42734-8d1b-4c66-ab34-57bd6edb91df

.default_centos_aarch64_config: &default_centos_aarch64_config
  CI_TF_LOCATION: ".ci/tf-huawei-arm"

.release_options: &release_options
  BUILD_TYPE: "release"
  INSTALL_DIR: "/usr/local/cloudberry-db"
  CLIENT_INSTALL_DIR: "/usr/local/cloudberry-clients"

.build_script: &build_script
  script: |
    cd /code
    echo "${CI_PIPELINE_ID}" > ${CI_PROJECT_DIR}/BUILD_NUMBER
    ${CI_PROJECT_DIR}/hd-ci/compile_cbdb.bash ${GEN_DOCKER_TAG}


.build_artifacts: &build_artifacts
  artifacts:
    name: "artifacts"
    paths:
      - ${CI_PROJECT_DIR}/cbdb-artifacts.txt
    reports:
      dotenv: ${CI_PROJECT_DIR}/cbdb-artifacts.txt
    expire_in: 1 week

.icw_scripts: &icw_scripts
  script: |
    function on_complete() {
      sync
      poweroff
    }

    # shutdown on completion
    trap on_complete EXIT
    # in case of timeout
    shutdown -P +480

    (
      cd /code
      mkdir -p ${CI_PROJECT_DIR}/coredumps
      [ -d /opt/coredumps ] && rm -rf /opt/coredumps
      ln -sf ${CI_PROJECT_DIR}/coredumps /opt/coredumps
      chmod 0777 ${CI_PROJECT_DIR}/coredumps /opt/coredumps
      echo "${CI_PIPELINE_ID}" > ${CI_PROJECT_DIR}/BUILD_NUMBER
      ${CI_PROJECT_DIR}/hd-ci/icw_cbdb.bash ${FTS_MODE}
    )

.regress_artifacts: &regress_artifacts
  artifacts:
    name: "regression"
    when: always
    paths:
      - ${CI_PROJECT_DIR}/src/test/regress/regression.out
      - ${CI_PROJECT_DIR}/src/test/regress/regression.diffs
      - ${CI_PROJECT_DIR}/src/test/regress/results/
      - ${CI_PROJECT_DIR}/src/test/regress/expected/
      - ${CI_PROJECT_DIR}/src/test/isolation2/regression.out
      - ${CI_PROJECT_DIR}/src/test/isolation2/regression.diffs
      - ${CI_PROJECT_DIR}/src/test/isolation2/results/
      - ${CI_PROJECT_DIR}/src/test/isolation2/expected/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/standby/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/qddir/demoDataDir-1/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast1/demoDataDir0/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast2/demoDataDir1/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast3/demoDataDir2/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast_mirror1/demoDataDir0/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast_mirror2/demoDataDir1/log/
      - ${CI_PROJECT_DIR}/gpAux/gpdemo/datadirs/dbfast_mirror3/demoDataDir2/log/
      - ${CI_PROJECT_DIR}/coredumps/
  timeout: 5 hours

.pr_rules: &pr_rules
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: always
    - when: manual

.job_test_rules: &job_test_rules
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: on_success
    - when: manual
.devel_trigger_rules: &devel_trigger_rules
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success

.release_rules: &release_rules
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
    - when: never

devel:trigger:gate:
  stage: integration
  needs:
    - "x86_64:build"
    - "x86_64:icw"
    - "x86_64:icw-orca"
    - "x86_64:icw-k8s"
    - "aarch64:build"
    - "aarch64:icw"
    - "aarch64:icw-orca"
    - "kylin:aarch64:build"
    - "kylin:aarch64:icw"
    - "kylin:aarch64:icw-orca"
  variables:
    TRIGGER_TYPE: 'debug'
    CBDB_BRANCH: $CI_COMMIT_BRANCH
    RELEASE_cbdb_centos7_x86_64_name: "$RELEASE_cbdb_centos7_x86_64_name"
    RELEASE_cbdb_centos7_x86_64_url: "$RELEASE_cbdb_centos7_x86_64_url"
    RELEASE_cbdb_centos7_aarch64_name: "$RELEASE_cbdb_centos7_aarch64_name"
    RELEASE_cbdb_centos7_aarch64_url: "$RELEASE_cbdb_centos7_aarch64_url"
    RELEASE_cbdb_kylin10_aarch64_name: "$RELEASE_cbdb_kylin10_aarch64_name"
    RELEASE_cbdb_kylin10_aarch64_url: "$RELEASE_cbdb_kylin10_aarch64_url"
    TARGZ_cbdb_centos7_x86_64_url: "$TARGZ_cbdb_centos7_x86_64_url"
    TARGZ_cbdb_centos7_aarch64_url: "$TARGZ_cbdb_centos7_aarch64_url"
    TARGZ_cbdb_kylin10_aarch64_url: "$TARGZ_cbdb_kylin10_aarch64_url"
  <<: *devel_trigger_rules
  trigger:
    project: cloudberry/ci-scripts
    branch: master
    strategy: depend
  allow_failure: true

release:trigger:gate:
  stage: integration
  needs:
    - "release:x86_64:build"
    - "release:x86_64:icw"
    - "release:x86_64:icw-orca"
    - "release:aarch64:build"
    - "release:aarch64:icw"
    - "release:aarch64:icw-orca"
    - "release:kylin10:x86_64:build" # experimental, not in product now
    - "release:kylin:aarch64:build"
    - "release:kylin:aarch64:icw"
    - "release:kylin:aarch64:icw-orca"
  variables:
    TRIGGER_TYPE: 'release'
    CBDB_VERSION: $CI_COMMIT_TAG
    CBDB_BRANCH: $CI_COMMIT_BRANCH
    RELEASE_cbdb_centos7_x86_64_name: "$RELEASE_cbdb_centos7_x86_64_name"
    RELEASE_cbdb_centos7_x86_64_url: "$RELEASE_cbdb_centos7_x86_64_url"
    RELEASE_cbdb_centos7_aarch64_name: "$RELEASE_cbdb_centos7_aarch64_name"
    RELEASE_cbdb_centos7_aarch64_url: "$RELEASE_cbdb_centos7_aarch64_url"
    RELEASE_cbdb_kylin10_x86_64_name: "$RELEASE_cbdb_kylin10_x86_64_name"
    RELEASE_cbdb_kylin10_x86_64_url: "$RELEASE_cbdb_kylin10_x86_64_url"
    RELEASE_cbdb_kylin10_aarch64_name: "$RELEASE_cbdb_kylin10_aarch64_name"
    RELEASE_cbdb_kylin10_aarch64_url: "$RELEASE_cbdb_kylin10_aarch64_url"
    TARGZ_cbdb_centos7_x86_64_url: "$TARGZ_cbdb_centos7_x86_64_url"
    TARGZ_cbdb_centos7_aarch64_url: "$TARGZ_cbdb_centos7_aarch64_url"
    TARGZ_cbdb_kylin10_x86_64_url: "$TARGZ_cbdb_kylin10_x86_64_url"
    TARGZ_cbdb_kylin10_aarch64_url: "$TARGZ_cbdb_kylin10_aarch64_url"
  <<: *release_rules
  trigger:
    project: cloudberry/ci-scripts
    branch: master
    strategy: depend

x86_64:build:
  stage: build
  variables:
    <<: *global_variables
  <<: *build_script
  <<: *build_artifacts
  timeout: 8 hours
  <<: *pr_rules

x86_64:icw:
  stage: test
  variables:
    <<: *global_variables
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *pr_rules

x86_64:icw-k8s:
  stage: test
  variables:
    <<: *global_variables
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
    FTS_MODE: "external_fts"
  needs: ["x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *pr_rules

x86_64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *pr_rules

x86_64:icw-parallel:
  stage: test
  variables:
    <<: *global_variables
    MAKE_TEST_COMMAND: "MAX_CONNECTIONS=5 -C src/test -k installcheck-cbdb-parallel"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 4 hours
  <<: *pr_rules

x86_64:unit_tests_gporca:
  stage: test
  variables:
    <<: *global_variables
  needs: ["x86_64:build"]
  timeout: 8 hours
  script:
    - cd /code
    - echo "${CI_PIPELINE_ID}" > ${CI_PROJECT_DIR}/BUILD_NUMBER
    - ${CI_PROJECT_DIR}/concourse/scripts/unit_tests_gporca.bash
  <<: *job_test_rules

x86_64:connectors:
  stage: test
  needs: [ "x86_64:build" ]
  variables:
    os_arch: x86_64
    os_type: $os_type
  trigger:
    project: cloudberry/cbdb_connectors
    branch: master
    strategy: depend
  <<: *devel_trigger_rules
  allow_failure: true

x86_64:fdw:
  stage: test
  needs: [ "x86_64:build" ]
  variables:
    os_arch: x86_64
    os_type: $os_type
  trigger:
    project: cloudberry/cbdb-oracle-fdw
    branch: master
    strategy: depend
  <<: *devel_trigger_rules
  allow_failure: true

x86_64:image:
  stage: deploy
  needs: [ "x86_64:build" ]
  variables:
    os_arch: x86_64
    os_type: $os_type
    cbdb_major_version: $cbdb_major_version
    cbdb_version: $cbdb_version
    internal_rpm_download_url: $internal_rpm_download_url
    public_rpm_download_url: $public_rpm_download_url
    build_commit_tag: $CI_COMMIT_TAG
  trigger:
    project: cloudberry/cbdb-database-image
    branch: main
  <<: *devel_trigger_rules
  allow_failure: true

x86_64:cbdb_testrepo:
  stage: integration
  needs: [ "x86_64:build" ]
  variables:
    os_arch: x86_64
    os_type: $os_type
    build_commit_tag: $CI_COMMIT_TAG
  trigger:
    project: cloudberry/cbdb_testrepo
    branch: master
    strategy: depend
  <<: *devel_trigger_rules
  allow_failure: true
##############################################################################
# pipelines for aarch64
##############################################################################
aarch64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
  <<: *build_script
  <<: *build_artifacts
  timeout: 8 hours
  <<: *pr_rules

aarch64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *pr_rules

aarch64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *pr_rules

aarch64:icw-parallel:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    MAKE_TEST_COMMAND: "MAX_CONNECTIONS=5 -C src/test -k installcheck-cbdb-parallel"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 4 hours
  <<: *pr_rules
##############################################################################
# pipelines for x86_64 release
##############################################################################
release:x86_64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *release_options
    GEN_DOCKER_TAG: "true"
  <<: *build_script
  <<: *build_artifacts
  <<: *release_rules
  allow_failure: false

release:x86_64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules

release:x86_64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules

release:x86_64:icw-k8s:
  stage: test
  variables:
    <<: *global_variables
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
    FTS_MODE: "external_fts"
  needs: ["release:x86_64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules
##############################################################################
# pipelines for aarch64 release
##############################################################################
release:aarch64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    <<: *release_options
  <<: *build_script
  <<: *build_artifacts
  <<: *release_rules
  allow_failure: false

release:aarch64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
    <<: *release_options
  needs: ["release:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules

release:aarch64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_centos_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
    <<: *release_options
  needs: ["release:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules
##############################################################################
# pipelines for kylin v10 sp1
##############################################################################
kylin:aarch64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
  <<: *build_script
  <<: *build_artifacts
  <<: *job_test_rules

kylin:aarch64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *job_test_rules

kylin:aarch64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *job_test_rules

kylin:aarch64:icw-parallel:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    MAKE_TEST_COMMAND: "MAX_CONNECTIONS=5 -C src/test -k installcheck-cbdb-parallel"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 4 hours
  <<: *job_test_rules

release:kylin:aarch64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    <<: *release_options
  <<: *build_script
  <<: *build_artifacts
  <<: *release_rules
  allow_failure: false

release:kylin:aarch64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:kylin:aarch64:build"]
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  allow_failure: false
  <<: *release_rules

release:kylin:aarch64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_aarch64_config
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:kylin:aarch64:build"]
  allow_failure: false
  <<: *icw_scripts
  <<: *regress_artifacts
  timeout: 8 hours
  <<: *release_rules

##############################################################################
# pipelines for kylin10 + x86_64
##############################################################################
kylin10:x86_64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
  <<: *build_script
  <<: *build_artifacts
  <<: *job_test_rules

kylin10:x86_64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin10:x86_64:build"]
  timeout: 8 hours
  <<: *icw_scripts
  <<: *regress_artifacts
  <<: *job_test_rules

kylin10:x86_64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin10:x86_64:build"]
  timeout: 8 hours
  <<: *icw_scripts
  <<: *regress_artifacts
  <<: *job_test_rules

kylin10:x86_64:icw-parallel:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    MAKE_TEST_COMMAND: "MAX_CONNECTIONS=5 -C src/test -k installcheck-cbdb-parallel"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["kylin10:x86_64:build"]
  timeout: 4 hours
  <<: *icw_scripts
  <<: *regress_artifacts
  <<: *job_test_rules

release:kylin10:x86_64:build:
  stage: build
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    <<: *release_options
  <<: *build_script
  <<: *build_artifacts
  <<: *release_rules
  allow_failure: false

release:kylin10:x86_64:icw:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=off' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:kylin10:x86_64:build"]
  timeout: 8 hours
  <<: *icw_scripts
  <<: *regress_artifacts
  <<: *release_rules
  allow_failure: false

release:kylin10:x86_64:icw-orca:
  stage: test
  variables:
    <<: *global_variables
    <<: *default_kylin10_x86_64_config
    <<: *release_options
    MAKE_TEST_COMMAND: "-k PGOPTIONS='-c optimizer=on' installcheck-world"
    TEST_OS: "centos"
    DUMP_DB: "true"
  needs: ["release:kylin10:x86_64:build"]
  timeout: 8 hours
  <<: *icw_scripts
  <<: *regress_artifacts
  <<: *release_rules
  allow_failure: false
